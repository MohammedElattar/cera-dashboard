{"version":3,"file":"static/js/670.cd40db9d.chunk.js","mappings":"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","sources":["components/form/CustomInput.jsx","components/form/ErrorBox.jsx","components/form/SubmitForm.jsx","modules/color/views/ColorForm.jsx","utility/helpers/toastHelper.js"],"sourcesContent":["import { Input} from \"reactstrap\"\nimport ErrorBox from \"./ErrorBox\";\n\nconst CustomInput = (props) => {\n    return <>\n        <Input {...props} />\n        <ErrorBox message={props.error}/>\n    </>\n}\n\nexport default CustomInput","import PropTypes from \"prop-types\";\nimport {FormFeedback} from \"reactstrap\";\n\nconst ErrorBox = ({message}) => {\n    return message && <span className={'alert alert-danger'}>{message}</span>\n}\n\nErrorBox.propTypes = {\n    message: PropTypes.string\n}\n\nexport default ErrorBox","import {Button, Col, Spinner} from \"reactstrap\";\nimport {goBack} from \"../../utility/helpers/routeHelper\";\n\nconst SubmitForm = ({isSubmitting}) => {\n    // const {shouldSubmit} = useFormikLogic(isSubmitting, errors)\n\n    return <Col xs={12} className='text-center mt-2 pt-50'>\n        <div className='d-flex'>\n            <Button type='submit' className='me-1' color='primary' disabled={isSubmitting}>\n                {isSubmitting && (<><Spinner size='sm' type='grow' /><span className='ms-50'>Loading...</span></>)}\n                {!isSubmitting && 'Submit'}\n            </Button>\n            <Button outline color='secondary' type='button' onClick={goBack}>\n                Go back\n            </Button>\n        </div>\n    </Col>\n}\n\nexport default SubmitForm;","// ** Reactstrap Imports\nimport {Row, Col, Form, Card, Label, CardBody, CardTitle, CardHeader} from 'reactstrap'\nimport CustomTextInput from \"../../../components/form/CustomInput\";\nimport {toastLoader} from \"../../../utility/helpers/toastHelper\";\nimport {useSelector} from \"react-redux\";\nimport InputColor from \"react-input-color\";\nimport SubmitForm from \"../../../components/form/SubmitForm\";\n\nconst ColorForm = ({inUpdate, formikObject}) => {\n    const {handleSubmit, values, errors, handleBlur, handleChange, isSubmitting, setFieldValue} = formikObject;\n    const isFetching = useSelector(state => state.colorsReducer.show.loading);\n\n    toastLoader(isFetching)\n\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle tag='h4'>{inUpdate ? 'Update' : 'Add'} Color</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Form onSubmit={handleSubmit}>\n                    <Row>\n                        <Col sm='12' className='mb-1'>\n                            <Label className='form-label' for='name'>\n                                Color Name\n                            </Label>\n                            <CustomTextInput\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                type='text'\n                                name='name'\n                                id='name'\n                                placeholder='Red'\n                                value={values.name}\n                                invalid={errors.name && true}\n                                error={errors.name}\n                            />\n                        </Col>\n                        <Col sm='12'>\n                            <Label className='form-label' for='name'>\n                                Color Name\n                            </Label>\n                                <InputColor\n                                    className={'w-100'}\n                                    initialValue={values.code || '#eeeeee'}\n                                    onChange={(color) => setFieldValue('code', color.hex)}\n                                />\n                                {errors.code && <span>{errors.code}</span>}\n                        </Col>\n                        <SubmitForm isSubmitting={isSubmitting} errors={errors}/>\n                    </Row>\n                </Form>\n            </CardBody>\n        </Card>\n    )\n}\nexport default ColorForm\n","import {useEffect} from \"react\";\nimport toastFactory from \"../factories/toastFactory\";\n\nexport const toastLoader = (isLoading = false) => {\n    useEffect(() => {\n        if (isLoading) {\n            toastFactory.dismiss()\n            toastFactory.loading('Loading')\n        } else {\n            toastFactory.dismiss()\n        }\n    }, [isLoading])\n}"],"names":["props","_jsxs","_Fragment","children","_jsx","Input","ErrorBox","message","error","_ref","className","isSubmitting","Col","xs","Button","type","color","disabled","Spinner","size","outline","onClick","goBack","inUpdate","formikObject","handleSubmit","values","errors","handleBlur","handleChange","setFieldValue","isFetching","useSelector","state","colorsReducer","show","loading","toastLoader","Card","CardHeader","CardTitle","tag","CardBody","Form","onSubmit","Row","sm","Label","for","CustomTextInput","onBlur","onChange","name","id","placeholder","value","invalid","InputColor","initialValue","code","hex","SubmitForm","isLoading","arguments","length","undefined","useEffect","toastFactory","dismiss"],"sourceRoot":""}