{"version":3,"file":"static/js/574.a997ff3a.chunk.js","mappings":"8KAIA,MAAMA,GAAYC,EAAAA,EAAAA,OAAK,IAAM,uDAY7B,EAX2BC,KACvB,MAAM,GAACC,IAAMC,EAAAA,EAAAA,MACP,SAACC,EAAQ,iBAAEC,IAAoBC,EAAAA,EAAAA,KAMrC,OAJAC,EAAAA,EAAAA,YAAU,KACNF,EAAiBH,EAAG,GACrB,KAEIM,EAAAA,EAAAA,KAACT,EAAS,CAACU,KAAM,CAACL,aAAY,C,wFCLzC,MAiCA,EAjCsBE,KAClB,MAAMI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,gBAsB5C,MAAO,CACHC,IAtBMJ,EAASI,IAAIP,KAuBnBQ,KAtBOL,EAASI,IAAIC,KAuBpBb,SAtBWQ,EAASM,KAuBpBC,kBArBsB,WAAyB,IAAxBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EAChCH,OAAoBG,IAAXH,GAAuBI,EAAAA,EAAAA,MAAoBJ,EACpDV,GAASe,EAAAA,EAAAA,KAAoB,IAE7BC,EAAAA,EAAcC,IAAI,oBAAqB,CAACP,WAASQ,MAAMC,IACnDnB,GAASoB,EAAAA,EAAAA,IAAkBD,EAASpB,KAAKA,OACzCC,GAASqB,EAAAA,EAAAA,IAAsBF,EAASpB,KAAKQ,MAAM,IAElDe,SAAQ,IAAMtB,GAASe,EAAAA,EAAAA,KAAoB,KACpD,EAaIpB,iBAXsBH,IACtBwB,EAAAA,EAAcC,IAAI,qBAADM,OAAsB/B,IAAM0B,MAAMC,IAC/CnB,GAASwB,EAAAA,EAAAA,IAAiBL,EAASpB,KAAKA,MAAM,GAChD,EASL,C,8DCtCE,MAAM0B,EAAa,WAA8B,IAAnBC,EAAQf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzCgB,EADsBhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAE7B,IAAK,MAAOiB,EAAKC,KAAUC,OAAOC,QAAQL,GACtCC,EAAYA,EAAUK,QAAQ,IAADT,OAAKK,GAAOC,GAG7C,OAAOF,CACX,EAEO,SAASb,IACZ,MAAMmB,EAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAEhDC,EAAe,IAAIC,IAEzBN,EAAUO,SAAQ,CAACX,EAAOD,KACtBU,EAAaG,IAAIb,EAAI,IAGzB,MAAMc,EAAoBC,MAAMC,KAAKN,GAE/BO,EAAkB,IAAIX,gBAI5B,OAFAQ,EAAkBF,SAASM,GAASD,EAAgBE,OAAOD,EAAMb,EAAUhB,IAAI6B,MAExED,CACX,CAEO,MAAMG,EAAgBtC,IACzB,MAAMuC,EAAM,GAAA1B,OAAMY,OAAOC,SAASc,SAAQ,KAAA3B,OAAIb,GAC9CyB,OAAOgB,QAAQC,UAAU,CAAEC,KAAMJ,GAAU,GAAIA,EAAO,EAG7CK,EAASA,KAClBH,QAAQI,MAAM,C","sources":["modules/order/containers/ShowOrderContainer.jsx","modules/order/hooks/useOrderLogic.js","utility/helpers/routeHelper.js"],"sourcesContent":["import {useParams} from \"react-router-dom\";\nimport useOrderLogic from \"../hooks/useOrderLogic\";\nimport {lazy, useEffect} from \"react\";\n\nconst ShowOrder = lazy(() => import('../views/ShowOrder'))\nconst ShowOrderContainer = () => {\n    const {id} = useParams()\n    const {oneOrder, getOneOrderLogic} = useOrderLogic()\n\n    useEffect(() => {\n        getOneOrderLogic(id)\n    }, []);\n\n    return <ShowOrder data={{oneOrder}}/>\n}\n\nexport default ShowOrderContainer;","import {useDispatch, useSelector} from \"react-redux\";\nimport {getUniqueParams} from \"../../../utility/helpers/routeHelper\";\nimport {\n\n} from \"../../product/redux\";\nimport axiosInstance from \"../../../api/axiosInstance\";\nimport {setAllOrdersLoading, setAllOrdersLogic, setAllOrdersMetaLogic, setOneOrderLogic} from \"../redux\";\n\nconst useOrderLogic = () => {\n    const dispatch = useDispatch()\n    const selector = useSelector(state => state.ordersReducer),\n        all = selector.all.data,\n        meta = selector.all.meta,\n        oneOrder = selector.show;\n\n    const getAllOrdersLogic = (params = undefined) => {\n        params = params === undefined ? getUniqueParams() : params;\n        dispatch(setAllOrdersLoading(true))\n\n        axiosInstance.get('/api/admin/orders', {params}).then((response) => {\n            dispatch(setAllOrdersLogic(response.data.data))\n            dispatch(setAllOrdersMetaLogic(response.data.meta));\n        })\n            .finally(() => dispatch(setAllOrdersLoading(false)))\n    }\n\n    const getOneOrderLogic = (id) => {\n        axiosInstance.get(`/api/admin/orders/${id}`).then((response) => {\n            dispatch(setOneOrderLogic(response.data.data))\n        })\n    }\n\n    return {\n        all,\n        meta,\n        oneOrder,\n        getAllOrdersLogic,\n        getOneOrderLogic\n    }\n}\n\nexport default useOrderLogic","export const parseRoute = (url = '', bindings = {}) => {\n    let routePath = url;\n    for (const [key, value] of Object.entries(bindings)) {\n        routePath = routePath.replace(`:${key}`, value);\n    }\n\n    return routePath;\n}\n\nexport function getUniqueParams() {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    const uniqueParams = new Set();\n    \n    urlParams.forEach((value, key) => {\n        uniqueParams.add(key);\n    });\n    \n    const uniqueParamsArray = Array.from(uniqueParams);\n\n    const uniqueUrlParams = new URLSearchParams();\n\n    uniqueParamsArray.forEach((item) => uniqueUrlParams.append(item, urlParams.get(item)));\n\n    return uniqueUrlParams;\n}\n\nexport const updateParams = (params) => {\n    const newUrl = `${window.location.pathname}?${params}`;\n    window.history.pushState({ path: newUrl }, '', newUrl);\n}\n\nexport const goBack = () => {\n    history.back()\n}"],"names":["ShowOrder","lazy","ShowOrderContainer","id","useParams","oneOrder","getOneOrderLogic","useOrderLogic","useEffect","_jsx","data","dispatch","useDispatch","selector","useSelector","state","ordersReducer","all","meta","show","getAllOrdersLogic","params","arguments","length","undefined","getUniqueParams","setAllOrdersLoading","axiosInstance","get","then","response","setAllOrdersLogic","setAllOrdersMetaLogic","finally","concat","setOneOrderLogic","parseRoute","bindings","routePath","key","value","Object","entries","replace","urlParams","URLSearchParams","window","location","search","uniqueParams","Set","forEach","add","uniqueParamsArray","Array","from","uniqueUrlParams","item","append","updateParams","newUrl","pathname","history","pushState","path","goBack","back"],"sourceRoot":""}