{"version":3,"file":"static/js/355.6b9ce314.chunk.js","mappings":"wLAKA,MAAMA,GAAeC,EAAAA,EAAAA,OAAK,IAAM,gEA2BhC,EA1ByBC,KACrB,MAAM,IAACC,EAAG,KAAEC,EAAI,oBAAEC,EAAmB,mBAAEC,IAAsBC,EAAAA,EAAAA,MACvD,aAACC,IAAgBC,EAAAA,EAAAA,GAAUJ,IAC3B,eACFK,EAAc,YACdC,EAAW,oBACXC,EAAmB,iBACnBC,EAAgB,oBAChBC,IACAC,EAAAA,EAAAA,GAAcV,EAAqBD,GAEvC,OAAOY,EAAAA,EAAAA,KAAChB,EAAY,CAChBiB,KAAM,CAACd,OACPe,aAAcZ,EACdE,aAAcA,EACdW,iBAAkB,CACdf,OACAM,iBACAC,cACAC,sBACAC,mBACAC,wBAEN,C,4GCjBN,MAgEA,EAhEwBP,KACpB,MAAMa,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAYC,GAASA,EAAMC,iBACxCxB,EAAMqB,EAASrB,IAAIc,KACnBb,EAAOoB,EAASrB,IAAIC,KACpBwB,EAAaJ,EAASK,KAEpBxB,EAAsB,WAAyB,IAAxByB,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,QAAGE,EAClCH,OAAoBG,IAAXH,GAAuBI,EAAAA,EAAAA,MAAoBJ,EACpDV,GAASe,EAAAA,EAAAA,KAAsB,IAE/BC,EAAAA,EAAcC,IAAI,sBAAuB,CAACP,WAASQ,MAAMC,IACrDnB,GAASoB,EAAAA,EAAAA,IAAoBD,EAAStB,KAAKA,OAC3CG,GAASqB,EAAAA,EAAAA,IAAwBF,EAAStB,KAAKb,MAAM,IACtDsC,SAAQ,IAAMtB,GAASe,EAAAA,EAAAA,KAAsB,KACpD,EAoCA,MAAO,CACHhC,MACAC,OACAwB,aACAvB,sBACAsC,kBA/BsBA,CAACC,EAAQC,KAC/B,MAAM,cAACC,GAAiBD,EAExBC,GAAc,GAEdV,EAAAA,EAAcW,SAAS,sBAAuBH,GACzCN,MAAK,IAAMhB,EAAS0B,EAAAA,EAAcC,SAClCC,OAAOC,IAAUC,EAAAA,EAAAA,IAAmBD,EAAMZ,SAAStB,KAAM4B,KACzDH,SAAQ,IAAMI,GAAc,IAAO,EAwBxCO,mBArBuBA,CAACT,EAAQU,EAAIT,KACpC,MAAM,cAACC,GAAiBD,EAExBC,GAAc,GAEdV,EAAAA,EAAcW,SAAS,uBAADQ,OAAwBD,GAAMV,GAC/CN,MAAK,IAAMhB,EAAS0B,EAAAA,EAAcC,SAClCC,OAAOC,IAAUC,EAAAA,EAAAA,IAAmBD,EAAMZ,SAAStB,KAAM4B,KACzDH,SAAQ,IAAMI,GAAc,IAAO,EAcxCxC,mBAXwBgD,IACxBlB,EAAAA,EAAcoB,OAAO,uBAADD,OAAwBD,IAAMhB,MAAK,IAAMjC,KAAsB,EAWnFoD,mBA1CwBH,IACxBlC,GAASe,EAAAA,EAAAA,KAAsB,IAE/BC,EAAAA,EAAcC,IAAI,uBAADkB,OAAwBD,IAAMhB,MAAMC,IACjDnB,GAASsC,EAAAA,EAAAA,IAAmBnB,EAAStB,KAAKA,MAAM,IACjDyB,SAAQ,IAAMtB,GAASe,EAAAA,EAAAA,KAAsB,KAAQ,EAsC3D,C,sFCvEL,MAAMwB,EAAeC,IAAkE,IAAjE,cAACC,EAAa,iBAAEC,EAAgB,SAAEC,EAAQ,eAAEC,GAAeJ,EAC7E,MAAO,CACHC,gBACAI,gBAAgB,EAChBC,kBAAkB,EAClBC,iBAAiB,EACjBC,oBAAoB,EACpBN,mBACAC,cACGC,EACN,EAGLL,EAAaU,UAAY,CACrBR,cAAeS,IAAAA,OACfR,iBAAkBQ,IAAAA,OAAiBC,WACnCR,SAAUO,IAAAA,KAAeC,YAG7B,U,kCCdO,MAAMC,EAAkBC,IAC3B,MAAMC,EAAef,EAAac,GAElC,OAAOE,EAAAA,EAAAA,IAAUD,EAAa,EAGrBtB,EAAqBA,CAACb,EAAUM,KAEzC,GAAIN,EAASqC,OAASC,EAAAA,EAAaC,kBAC/B,OAGJC,QAAQC,IAAI,YAEZ,MAAM,cAACnB,EAAa,UAAEoB,GAAapC,EAE7BqC,EAAYC,OAAOC,KAAKvB,GAExBwB,EAAY,CAAC,EAEnBH,EAAUI,SAASC,SACiBtD,IAA5BM,EAAStB,KAAKsE,KACdF,EAAUE,GAAYhD,EAAStB,KAAKsE,GACxC,KAGCC,EAAAA,EAAAA,IAAWH,IACZJ,EAAUI,GAGd,MAAMI,EAAoBN,OAAOC,KAAK7C,EAAStB,MAE/C,IAAK,IAAIyE,EAAI,EAAGA,EAAID,EAAkBzD,OAAQ0D,IAC1C,IAAKR,EAAUS,SAASF,EAAkBC,IAAK,CAC3CE,EAAAA,EAAazC,MAAMZ,EAAStB,KAAKwE,EAAkBC,KACnD,KACJ,CACJ,EAGSG,EAAqBC,IACvB,CACHb,UAAWa,EAAOb,UAClBpB,cAAeiC,EAAOjC,cACtBf,cAAegD,EAAOhD,gBAK9B0B,EAAeH,UAAY,CACvBR,cAAeS,IAAAA,OACfR,iBAAkBQ,IAAAA,OAAiBC,WACnCR,SAAUO,IAAAA,KAAeC,WACzBP,eAAgBM,IAAAA,O,+FC1DpB,MAAMyB,GAAa9F,EAAAA,EAAAA,OAAK,IAAM,gCAGjB+F,EAAuBC,IACzBjF,EAAAA,EAAAA,KAAC+E,EAAU,IAAKE,IAGpB,SAASC,EAAmBC,GAK/B,OAJAA,EAAOC,OAAOC,SAASF,KAClBC,OAAOE,UAAUH,IAASA,EAAO,KAClCA,EAAO,GAEJA,CACX,CAEO,SAASI,EAAgBC,GAK5B,OAJAA,EAAUJ,OAAOC,SAASG,KACrBJ,OAAOE,UAAUE,IAAaA,EAAU,GAAKA,EAAU,OACxDA,EAAU,GAEPA,CACX,CAyBO,SAASC,EAAuBN,EAAMK,GACzC,MAAME,EAAgB,IAAIC,gBAAgBC,OAAOC,SAASC,QAE1DJ,EAAcK,IAAI,OAAQb,EAAmBC,GAAMa,YACnDN,EAAcK,IAAI,WAAYR,EAAgBC,GAASQ,aAEvDC,EAAAA,EAAAA,IAAaP,EAAcM,WAC/B,C,8DCvDO,MAAME,EAAa,WAA8B,IAAnBC,EAAQpF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzCqF,EADsBrF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAE7B,IAAK,MAAOsF,EAAKC,KAAUnC,OAAOoC,QAAQJ,GACtCC,EAAYA,EAAUI,QAAQ,IAADjE,OAAK8D,GAAOC,GAG7C,OAAOF,CACX,EAEO,SAASlF,IACZ,MAAMuF,EAAY,IAAId,gBAAgBC,OAAOC,SAASC,QAEhDY,EAAe,IAAIC,IAEzBF,EAAUnC,SAAQ,CAACgC,EAAOD,KACtBK,EAAaE,IAAIP,EAAI,IAGzB,MAAMQ,EAAoBC,MAAMC,KAAKL,GAE/BM,EAAkB,IAAIrB,gBAI5B,OAFAkB,EAAkBvC,SAAS2C,GAASD,EAAgBE,OAAOD,EAAMR,EAAUpF,IAAI4F,MAExED,CACX,CAEO,MAAMf,EAAgBnF,IACzB,MAAMqG,EAAM,GAAA5E,OAAMqD,OAAOC,SAASuB,SAAQ,KAAA7E,OAAIzB,GAC9C8E,OAAOyB,QAAQC,UAAU,CAAEC,KAAMJ,GAAU,GAAIA,EAAO,EAG7CK,EAASA,KAClBH,QAAQI,MAAM,C,wDC/BX,MAAMC,EAAmBpB,IAC5B,MAAMxF,GAASI,EAAAA,EAAAA,MACfJ,EAAOiF,IAAI,SAAUO,IACrBL,EAAAA,EAAAA,IAAanF,EAAOkF,WAAW,EAGtB2B,EAAiBA,KACXzG,EAAAA,EAAAA,MAEDG,IAAI,WAAa,E,0DCPnC,MAiCA,EAjCsBtB,CAAC6H,EAAiBxI,KACpC,MAAOM,EAAgBmI,IAAqBC,EAAAA,EAAAA,WAASvC,EAAAA,EAAAA,QAC9C5F,EAAaC,IAAuBkI,EAAAA,EAAAA,WAAS5C,EAAAA,EAAAA,QAEpD6C,EAAAA,EAAAA,YAAU,KACNH,GAAiB,GAClB,CAACjI,EAAaD,KAEjBqI,EAAAA,EAAAA,YAAU,KACNF,EAAkBzI,EAAKoG,SACvB5F,EAAoBR,EAAKO,YAAY,GACtC,CAACP,IAaJ,MAAO,CACHM,iBACAC,cACAE,iBAdsBsF,IACtBvF,EAAoBuF,IACpBM,EAAAA,EAAAA,IAAuBN,EAAMzF,EAAe,EAa5CI,oBAVyB0F,IACzBqC,EAAkBrC,IAClBC,EAAAA,EAAAA,IAAuB9F,EAAa6F,GACpCqC,EAAkBrC,EAAQ,EAQ1B5F,sBACH,C,gDChCL,MASA,EATmBgI,IAMR,CAACpI,aALc8G,KAClBoB,EAAAA,EAAAA,GAAgBpB,GAChBsB,GAAiB,G","sources":["modules/product/containers/ProductContainer.jsx","modules/product/hooks/useProductLogic.js","utility/formik/formikConfig.js","utility/formik/formikHelper.js","utility/helpers/paginationHelper.js","utility/helpers/routeHelper.js","utility/helpers/searchHelper.js","utility/hooks/usePagination.js","utility/hooks/useSearch.js"],"sourcesContent":["import {lazy} from \"react\";\nimport useSearch from \"../../../utility/hooks/useSearch\";\nimport usePagination from \"../../../utility/hooks/usePagination\";\nimport useProductLogic from \"../hooks/useProductLogic\";\n\nconst ProductTable = lazy(() => import('../views/ProductTable'))\nconst ProductContainer = () => {\n    const {all, meta, getAllProductsLogic, deleteProductLogic} = useProductLogic()\n    const {handleSearch} = useSearch(getAllProductsLogic);\n    const {\n        currentPerPage,\n        currentPage,\n        setCurrentPageState,\n        handlePageChange,\n        handlePerPageChange\n    } = usePagination(getAllProductsLogic, meta);\n\n    return <ProductTable\n        data={{all}}\n        handleDelete={deleteProductLogic}\n        handleSearch={handleSearch}\n        paginationObject={{\n            meta,\n            currentPerPage,\n            currentPage,\n            setCurrentPageState,\n            handlePageChange,\n            handlePerPageChange\n        }}\n    />\n}\n\nexport default ProductContainer;","import {useDispatch, useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport {getUniqueParams} from \"../../../utility/helpers/routeHelper\";\nimport {\n    setAllProductsLogic,\n    setAllProductsLoading,\n    setAllProductsMetaLogic, setOneProductLogic\n} from \"../redux\";\nimport axiosInstance from \"../../../api/axiosInstance\";\nimport productRoutes from \"../../product/constants/routes\";\nimport {formikErrorHandler} from \"../../../utility/formik/formikHelper\";\n\nconst useProductLogic = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const selector = useSelector(state => state.productReducer),\n        all = selector.all.data,\n        meta = selector.all.meta,\n        oneProduct = selector.show;\n\n    const getAllProductsLogic = (params = undefined) => {\n        params = params === undefined ? getUniqueParams() : params;\n        dispatch(setAllProductsLoading(true))\n\n        axiosInstance.get('/api/admin/products', {params}).then((response) => {\n            dispatch(setAllProductsLogic(response.data.data))\n            dispatch(setAllProductsMetaLogic(response.data.meta));\n        }).finally(() => dispatch(setAllProductsLoading(false)))\n    }\n\n    const getOneProductLogic = (id) => {\n        dispatch(setAllProductsLoading(true))\n\n        axiosInstance.get(`/api/admin/products/${id}`).then((response) => {\n            dispatch(setOneProductLogic(response.data.data));\n        }).finally(() => dispatch(setAllProductsLoading(false)))\n    }\n\n    const storeProductLogic = (values, formikObject) => {\n        const {setSubmitting} = formikObject;\n\n        setSubmitting(true)\n\n        axiosInstance.postForm('/api/admin/products', values)\n            .then(() => navigate(productRoutes.TABLE))\n            .catch((error) => formikErrorHandler(error.response.data, formikObject))\n            .finally(() => setSubmitting(false))\n    }\n\n    const updateProductLogic = (values, id, formikObject) => {\n        const {setSubmitting} = formikObject;\n\n        setSubmitting(true)\n\n        axiosInstance.postForm(`/api/admin/products/${id}`, values)\n            .then(() => navigate(productRoutes.TABLE))\n            .catch((error) => formikErrorHandler(error.response.data, formikObject))\n            .finally(() => setSubmitting(false))\n    }\n\n    const deleteProductLogic = (id) => {\n        axiosInstance.delete(`/api/admin/products/${id}`).then(() => getAllProductsLogic())\n    }\n\n    return {\n        all,\n        meta,\n        oneProduct,\n        getAllProductsLogic,\n        storeProductLogic,\n        updateProductLogic,\n        deleteProductLogic,\n        getOneProductLogic\n    }\n}\n\nexport default useProductLogic","import PropTypes from \"prop-types\";\n\nconst FormikConfig = ({initialValues, validationSchema, onSubmit, overrideConfig}) => {\n    return {\n        initialValues,\n        validateOnBlur: true,\n        validateOnChange: false,\n        validateOnMount: false,\n        enableReinitialize: true,\n        validationSchema,\n        onSubmit,\n        ...overrideConfig\n    }\n}\n\nFormikConfig.propTypes = {\n    initialValues: PropTypes.object,\n    validationSchema: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired\n}\n\nexport default FormikConfig","import {useFormik} from \"formik\";\nimport FormikConfig from \"./formikConfig\";\nimport PropTypes from \"prop-types\";\nimport {HttpResponse} from \"../../constants/api\";\nimport toastFactory from \"../factories/toastFactory\";\nimport {isObjEmpty} from \"../Utils\";\n\nexport const formikInstance = (props) => {\n    const formikConfig = FormikConfig(props)\n\n    return useFormik(formikConfig)\n}\n\nexport const formikErrorHandler = (response, formikObject) => {\n\n    if (response.code !== HttpResponse.VALIDATION_ERRORS) {\n        return;\n    }\n\n    console.log('iam here');\n\n    const {initialValues, setErrors} = formikObject;\n\n    const errorKeys = Object.keys(initialValues);\n\n    const tmpErrors = {}\n\n    errorKeys.forEach((errorKey) => {\n        if (response.data[errorKey] !== undefined) {\n            tmpErrors[errorKey] = response.data[errorKey]\n        }\n    })\n\n    if (!isObjEmpty(tmpErrors)) {\n        setErrors(tmpErrors)\n    }\n\n    const responseErrorKeys = Object.keys(response.data);\n\n    for (let i = 0; i < responseErrorKeys.length; i++) {\n        if (!errorKeys.includes(responseErrorKeys[i])) {\n            toastFactory.error(response.data[responseErrorKeys[i]])\n            break;\n        }\n    }\n}\n\nexport const buildFormikParams = (formik) => {\n    return {\n        setErrors: formik.setErrors,\n        initialValues: formik.initialValues,\n        setSubmitting: formik.setSubmitting\n    }\n}\n\n\nformikInstance.propTypes = {\n    initialValues: PropTypes.object,\n    validationSchema: PropTypes.object.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    overrideConfig: PropTypes.object\n}","import { lazy } from \"react\"\n\nconst Pagination = lazy(() => import('../../components/table/PaginationComponent'))\nimport {getUniqueParams, updateParams} from \"./routeHelper\";\n\nexport const paginationComponent = (args) => {\n    return <Pagination {...args} />\n}\n\nexport function getValidPageNumber(page) {\n    page = Number.parseInt(page);\n    if (!Number.isInteger(page) || page < 1) {\n        page = 1;\n    }\n    return page;\n}\n\nexport function getValidPerPage(perPage) {\n    perPage = Number.parseInt(perPage);\n    if (!Number.isInteger(perPage) || (perPage < 5 || perPage > 100)) {\n        perPage = 5;\n    }\n    return perPage;\n}\n\nexport function getCurrentPage() {\n    const { page } = getUniqueParams(); // Assuming you have defined a 'page' parameter in your route\n    return getValidPageNumber(page);\n}\n\nexport function getPerPage() {\n    const { perPage } = getUniqueParams(); // Assuming you have defined a 'perPage' parameter in your route\n    return getValidPerPage(perPage);\n}\n\nexport function getNextPageNumber() {\n    let currentPage = getCurrentPage();\n    return ++currentPage;\n}\n\nexport function getPreviousPageNumber() {\n    let currentPage = getCurrentPage();\n    if (currentPage <= 1) {\n        return 1;\n    }\n    return --currentPage;\n}\n\nexport function updatePaginationParams(page, perPage) {\n    const updatedParams = new URLSearchParams(window.location.search);\n\n    updatedParams.set('page', getValidPageNumber(page).toString());\n    updatedParams.set('per_page', getValidPerPage(perPage).toString());\n\n    updateParams(updatedParams.toString())\n}\n\n\n\nexport function generatePaginationParams(page, perPage) {\n    page = getCurrentPage()\n    perPage = getPerPage()\n\n    return {page, per_page: perPage}\n}","export const parseRoute = (url = '', bindings = {}) => {\n    let routePath = url;\n    for (const [key, value] of Object.entries(bindings)) {\n        routePath = routePath.replace(`:${key}`, value);\n    }\n\n    return routePath;\n}\n\nexport function getUniqueParams() {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    const uniqueParams = new Set();\n    \n    urlParams.forEach((value, key) => {\n        uniqueParams.add(key);\n    });\n    \n    const uniqueParamsArray = Array.from(uniqueParams);\n\n    const uniqueUrlParams = new URLSearchParams();\n\n    uniqueParamsArray.forEach((item) => uniqueUrlParams.append(item, urlParams.get(item)));\n\n    return uniqueUrlParams;\n}\n\nexport const updateParams = (params) => {\n    const newUrl = `${window.location.pathname}?${params}`;\n    window.history.pushState({ path: newUrl }, '', newUrl);\n}\n\nexport const goBack = () => {\n    history.back()\n}","import {getUniqueParams, updateParams} from \"./routeHelper\";\n\nexport const pushSearchParam = (value) => {\n    const params = getUniqueParams()\n    params.set('handle', value)\n    updateParams(params.toString())\n}\n\nexport const getSearchParam = () => {\n    const params = getUniqueParams();\n\n    return params.get('handle') || '';\n}","// paginationLogic.js\nimport { useEffect, useState } from \"react\";\nimport {getValidPageNumber, getValidPerPage, updatePaginationParams} from \"../helpers/paginationHelper\";\n\nconst usePagination = (getAllDataLogic, meta) => {\n    const [currentPerPage, setCurrentPerPage] = useState(getValidPerPage());\n    const [currentPage, setCurrentPageState] = useState(getValidPageNumber());\n\n    useEffect(() => {\n        getAllDataLogic();\n    }, [currentPage, currentPerPage]);\n\n    useEffect(() => {\n        setCurrentPerPage(meta.perPage);\n        setCurrentPageState(meta.currentPage);\n    }, [meta]);\n\n    const handlePageChange = (page) => {\n        setCurrentPageState(page);\n        updatePaginationParams(page, currentPerPage);\n    };\n\n    const handlePerPageChange = (perPage) => {\n        setCurrentPerPage(perPage);\n        updatePaginationParams(currentPage, perPage);\n        setCurrentPerPage(perPage);\n    };\n\n    return {\n        currentPerPage,\n        currentPage,\n        handlePageChange,\n        handlePerPageChange,\n        setCurrentPageState\n    };\n};\n\nexport default usePagination;\n","import {pushSearchParam} from \"../helpers/searchHelper\";\n\nconst useSearch = (getAllDataLogic) => {\n    const handleSearch = (value) => {\n        pushSearchParam(value)\n        getAllDataLogic()\n    }\n\n    return {handleSearch}\n}\n\nexport default useSearch;"],"names":["ProductTable","lazy","ProductContainer","all","meta","getAllProductsLogic","deleteProductLogic","useProductLogic","handleSearch","useSearch","currentPerPage","currentPage","setCurrentPageState","handlePageChange","handlePerPageChange","usePagination","_jsx","data","handleDelete","paginationObject","dispatch","useDispatch","navigate","useNavigate","selector","useSelector","state","productReducer","oneProduct","show","params","arguments","length","undefined","getUniqueParams","setAllProductsLoading","axiosInstance","get","then","response","setAllProductsLogic","setAllProductsMetaLogic","finally","storeProductLogic","values","formikObject","setSubmitting","postForm","productRoutes","TABLE","catch","error","formikErrorHandler","updateProductLogic","id","concat","delete","getOneProductLogic","setOneProductLogic","FormikConfig","_ref","initialValues","validationSchema","onSubmit","overrideConfig","validateOnBlur","validateOnChange","validateOnMount","enableReinitialize","propTypes","PropTypes","isRequired","formikInstance","props","formikConfig","useFormik","code","HttpResponse","VALIDATION_ERRORS","console","log","setErrors","errorKeys","Object","keys","tmpErrors","forEach","errorKey","isObjEmpty","responseErrorKeys","i","includes","toastFactory","buildFormikParams","formik","Pagination","paginationComponent","args","getValidPageNumber","page","Number","parseInt","isInteger","getValidPerPage","perPage","updatePaginationParams","updatedParams","URLSearchParams","window","location","search","set","toString","updateParams","parseRoute","bindings","routePath","key","value","entries","replace","urlParams","uniqueParams","Set","add","uniqueParamsArray","Array","from","uniqueUrlParams","item","append","newUrl","pathname","history","pushState","path","goBack","back","pushSearchParam","getSearchParam","getAllDataLogic","setCurrentPerPage","useState","useEffect"],"sourceRoot":""}